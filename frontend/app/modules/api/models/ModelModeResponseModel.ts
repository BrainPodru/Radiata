/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface ModelModeResponseModel
 */
export interface ModelModeResponseModel {
    /**
     *
     * @type {string}
     * @memberof ModelModeResponseModel
     */
    status: string
    /**
     *
     * @type {string}
     * @memberof ModelModeResponseModel
     */
    message?: string
    /**
     *
     * @type {string}
     * @memberof ModelModeResponseModel
     */
    data: ModelModeResponseModelDataEnum
}

/**
 * @export
 */
export const ModelModeResponseModelDataEnum = {
    diffusers: 'diffusers',
    tensorrt: 'tensorrt',
} as const
export type ModelModeResponseModelDataEnum =
    (typeof ModelModeResponseModelDataEnum)[keyof typeof ModelModeResponseModelDataEnum]

/**
 * Check if a given object implements the ModelModeResponseModel interface.
 */
export function instanceOfModelModeResponseModel(value: object): boolean {
    let isInstance = true
    isInstance = isInstance && 'status' in value
    isInstance = isInstance && 'data' in value

    return isInstance
}

export function ModelModeResponseModelFromJSON(json: any): ModelModeResponseModel {
    return ModelModeResponseModelFromJSONTyped(json, false)
}

export function ModelModeResponseModelFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): ModelModeResponseModel {
    if (json === undefined || json === null) {
        return json
    }
    return {
        status: json['status'],
        message: !exists(json, 'message') ? undefined : json['message'],
        data: json['data'],
    }
}

export function ModelModeResponseModelToJSON(value?: ModelModeResponseModel | null): any {
    if (value === undefined) {
        return undefined
    }
    if (value === null) {
        return null
    }
    return {
        status: value.status,
        message: value.message,
        data: value.data,
    }
}
