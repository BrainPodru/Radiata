/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface BuildEngineOptions
 */
export interface BuildEngineOptions {
    /**
     *
     * @type {string}
     * @memberof BuildEngineOptions
     */
    hf_token?: string
    /**
     *
     * @type {string}
     * @memberof BuildEngineOptions
     */
    subfolder?: string
    /**
     *
     * @type {number}
     * @memberof BuildEngineOptions
     */
    max_batch_size?: number
    /**
     *
     * @type {number}
     * @memberof BuildEngineOptions
     */
    opt_image_height?: number
    /**
     *
     * @type {number}
     * @memberof BuildEngineOptions
     */
    opt_image_width?: number
    /**
     *
     * @type {number}
     * @memberof BuildEngineOptions
     */
    min_latent_resolution?: number
    /**
     *
     * @type {number}
     * @memberof BuildEngineOptions
     */
    max_latent_resolution?: number
    /**
     *
     * @type {boolean}
     * @memberof BuildEngineOptions
     */
    build_enable_refit?: boolean
    /**
     *
     * @type {boolean}
     * @memberof BuildEngineOptions
     */
    build_static_batch?: boolean
    /**
     *
     * @type {boolean}
     * @memberof BuildEngineOptions
     */
    build_dynamic_shape?: boolean
    /**
     *
     * @type {boolean}
     * @memberof BuildEngineOptions
     */
    build_all_tactics?: boolean
    /**
     *
     * @type {boolean}
     * @memberof BuildEngineOptions
     */
    build_preview_features?: boolean
    /**
     *
     * @type {number}
     * @memberof BuildEngineOptions
     */
    onnx_opset?: number
    /**
     *
     * @type {boolean}
     * @memberof BuildEngineOptions
     */
    force_engine_build?: boolean
    /**
     *
     * @type {boolean}
     * @memberof BuildEngineOptions
     */
    force_onnx_export?: boolean
    /**
     *
     * @type {boolean}
     * @memberof BuildEngineOptions
     */
    force_onnx_optimize?: boolean
}

/**
 * Check if a given object implements the BuildEngineOptions interface.
 */
export function instanceOfBuildEngineOptions(value: object): boolean {
    let isInstance = true

    return isInstance
}

export function BuildEngineOptionsFromJSON(json: any): BuildEngineOptions {
    return BuildEngineOptionsFromJSONTyped(json, false)
}

export function BuildEngineOptionsFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): BuildEngineOptions {
    if (json === undefined || json === null) {
        return json
    }
    return {
        hf_token: !exists(json, 'hf_token') ? undefined : json['hf_token'],
        subfolder: !exists(json, 'subfolder') ? undefined : json['subfolder'],
        max_batch_size: !exists(json, 'max_batch_size') ? undefined : json['max_batch_size'],
        opt_image_height: !exists(json, 'opt_image_height') ? undefined : json['opt_image_height'],
        opt_image_width: !exists(json, 'opt_image_width') ? undefined : json['opt_image_width'],
        min_latent_resolution: !exists(json, 'min_latent_resolution')
            ? undefined
            : json['min_latent_resolution'],
        max_latent_resolution: !exists(json, 'max_latent_resolution')
            ? undefined
            : json['max_latent_resolution'],
        build_enable_refit: !exists(json, 'build_enable_refit')
            ? undefined
            : json['build_enable_refit'],
        build_static_batch: !exists(json, 'build_static_batch')
            ? undefined
            : json['build_static_batch'],
        build_dynamic_shape: !exists(json, 'build_dynamic_shape')
            ? undefined
            : json['build_dynamic_shape'],
        build_all_tactics: !exists(json, 'build_all_tactics')
            ? undefined
            : json['build_all_tactics'],
        build_preview_features: !exists(json, 'build_preview_features')
            ? undefined
            : json['build_preview_features'],
        onnx_opset: !exists(json, 'onnx_opset') ? undefined : json['onnx_opset'],
        force_engine_build: !exists(json, 'force_engine_build')
            ? undefined
            : json['force_engine_build'],
        force_onnx_export: !exists(json, 'force_onnx_export')
            ? undefined
            : json['force_onnx_export'],
        force_onnx_optimize: !exists(json, 'force_onnx_optimize')
            ? undefined
            : json['force_onnx_optimize'],
    }
}

export function BuildEngineOptionsToJSON(value?: BuildEngineOptions | null): any {
    if (value === undefined) {
        return undefined
    }
    if (value === null) {
        return null
    }
    return {
        hf_token: value.hf_token,
        subfolder: value.subfolder,
        max_batch_size: value.max_batch_size,
        opt_image_height: value.opt_image_height,
        opt_image_width: value.opt_image_width,
        min_latent_resolution: value.min_latent_resolution,
        max_latent_resolution: value.max_latent_resolution,
        build_enable_refit: value.build_enable_refit,
        build_static_batch: value.build_static_batch,
        build_dynamic_shape: value.build_dynamic_shape,
        build_all_tactics: value.build_all_tactics,
        build_preview_features: value.build_preview_features,
        onnx_opset: value.onnx_opset,
        force_engine_build: value.force_engine_build,
        force_onnx_export: value.force_onnx_export,
        force_onnx_optimize: value.force_onnx_optimize,
    }
}
